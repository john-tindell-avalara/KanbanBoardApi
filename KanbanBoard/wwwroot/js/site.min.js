var KanbanBoardApp;!function(o){var n=function(){function o(o,n,r){var t=this;this.scope=o,this.http=n,this.modalInstance=r,o.save=function(){if(t.scope.boardForm.$valid){var n={Name:t.scope.boardForm.name.$viewValue};t.http.post("http://localhost:2943/boards",n).success(function(o){t.scope.$emit("BoardCreated",o),r.dismiss(null)}).error(function(n,r){o.errorMessage="Unknown error has occured",t.scope.boardForm.name.$invalid=!0})}},o.cancel=function(){r.dismiss("cancel")}}return o}();o.AddBoardController=n}(KanbanBoardApp||(KanbanBoardApp={}));var KanbanBoardApp;!function(o){var n=function(){function o(o,n,r,t){var e=this;this.scope=o,this.http=n,this.modalInstance=r,this.currentBoard=t,o.save=function(){if(e.scope.columnForm.$valid){var n={Name:e.scope.columnForm.name.$viewValue};e.http.post("http://localhost:2943/boards/"+e.currentBoard.Slug+"/columns",n).success(function(o){e.scope.$emit("newColumnCreated",o),r.dismiss(null)}).error(function(n,r){o.errorMessage=409===r?"Column with this name already exists":"Unknown error has occured",e.scope.columnForm.name.$invalid=!0})}},o.cancel=function(){r.dismiss("cancel")}}return o}();o.AddColumnController=n}(KanbanBoardApp||(KanbanBoardApp={}));var KanbanBoardApp;!function(o){var n=function(){function o(o,n,r,t,e){var a=this;this.scope=o,this.http=n,this.modalInstance=r,this.currentBoard=t,this.columnSlug=e,o.save=function(){if(a.scope.addTaskForm.$valid){var n={Name:a.scope.addTaskForm.name.$viewValue,Description:a.scope.addTaskForm.description.$viewValue,BoardColumnSlug:a.columnSlug};a.http.post("http://localhost:2943/boards/"+a.currentBoard.Slug+"/tasks",n).success(function(o){a.scope.$emit("newTaskCreated",o),r.dismiss(null)}).error(function(n,r){o.errorMessage="Unknown error has occured",a.scope.addTaskForm.name.$invalid=!0})}},o.cancel=function(){r.dismiss("cancel")}}return o}();o.AddTaskController=n}(KanbanBoardApp||(KanbanBoardApp={}));var KanbanBoardApp;!function(o){var n=angular.module("KanbanBoardApp",["ngDraggable","ui.bootstrap"]);n.config(["$httpProvider",function(o){o.defaults.useXDomain=!0,o.defaults.headers.common="Content-Type: application/json",delete o.defaults.headers.common["X-Requested-With"]}]),n.controller("BoardController",["$scope","$http","$modal",o.BoardController]),n.controller("AddBoardController",["$scope","$http","$modalInstance",o.AddBoardController]),n.controller("AddColumnController",["$scope","$http","$modalInstance","currentBoard",o.AddColumnController]),n.controller("AddTaskController",["$scope","$http","$modalInstance","currentBoard","columnSlug",o.AddTaskController]),n.controller("UpdateTaskController",["$scope","$http","$modalInstance","currentBoard","columns","currentTask",o.UpdateTaskController])}(KanbanBoardApp||(KanbanBoardApp={}));var KanbanBoardApp;!function(o){var n=function(){function o(o,n,r){var t=this;this.scope=o,this.http=n,this.modal=r,this.scope.loading=!0,n.get("http://localhost:2943/boards").success(function(o){t.scope.loading=!1,t.scope.boards=o.Items,t.scope.loadBoard(t.scope.boards[0])}),o.$on("BoardCreated",function(o,n){t.scope.boards.push(n)}),o.$on("newColumnCreated",function(o,n){t.scope.columns.push(n)}),o.$on("newTaskCreated",function(o,n){t.scope.tasks.push(n)}),o.$on("TaskUpdated",function(o,n){for(var r in t.scope.tasks)if(t.scope.tasks[r].Id===n.Id){t.scope.tasks[r]=n;break}}),o.$on("ColumnUpdated",function(o,n){for(var r in t.scope.columns)if(t.scope.columns[r].Id===n.Id){t.scope.columns[r]=n;break}}),o.loadBoard=function(o){t.scope.currentBoard=o,t.http.get("http://localhost:2943/boards/"+o.Slug+"/columns").success(function(o){t.scope.columns=o.Items}),t.http.get("http://localhost:2943/boards/"+o.Slug+"/tasks").success(function(o){t.scope.tasks=o.Items})},o.createBoard=function(){r.open({animation:!0,templateUrl:"AddBoardModal.html",controller:"AddBoardController",scope:t.scope})},o.createTask=function(o){r.open({animation:!0,templateUrl:"AddTaskModal.html",controller:"AddTaskController",scope:t.scope,resolve:{currentBoard:function(){return t.scope.currentBoard},columnSlug:function(){return o}}})},o.deleteTask=function(o){t.http["delete"]("http://localhost:2943/boards/"+t.scope.currentBoard.Slug+"/tasks/"+o.Id).success(function(n){var r=t.scope.tasks.indexOf(o);r>-1&&t.scope.tasks.splice(r,1)})},o.editTask=function(o){var n=angular.copy(o);r.open({animation:!0,templateUrl:"UpdateTaskModal.html",controller:"UpdateTaskController",scope:t.scope,resolve:{currentBoard:function(){return t.scope.currentBoard},columns:function(){return t.scope.columns},currentTask:function(){return n}}})},o.updateTask=function(o){t.http.put("http://localhost:2943/boards/"+t.scope.currentBoard.Slug+"/tasks/"+o.Id,o).success(function(o){})},o.createColumn=function(){r.open({animation:!0,templateUrl:"AddColumnModal.html",controller:"AddColumnController",scope:t.scope,resolve:{currentBoard:function(){return t.scope.currentBoard}}})},o.editColumn=function(o){var n=angular.copy(o);r.open({animation:!0,templateUrl:"UpdateColumnModal.html",controller:"UpdateColumnController",scope:t.scope,resolve:{currentBoard:function(){return t.scope.currentBoard},currentColumn:function(){return n}}})},o.deleteColumn=function(o){t.http["delete"]("http://localhost:2943/boards/"+t.scope.currentBoard.Slug+"/columns/"+o.Slug).success(function(n){var r=t.scope.columns.indexOf(o);r>-1&&t.scope.columns.splice(r,1)})},o.onDragComplete=function(o,n,r){o.BoardColumnSlug=r,t.http.put("http://localhost:2943/boards/"+t.scope.currentBoard.Slug+"/tasks/"+o.Id,o).success(function(o){})}}return o}();o.BoardController=n}(KanbanBoardApp||(KanbanBoardApp={}));var KanbanBoardApp;!function(o){var n=angular.module("KanbanBoardApp",["ngDraggable","ui.bootstrap"]);n.controller("BoardController",["$scope","$http","$modal",o.BoardController]),n.controller("AddBoardController",["$scope","$http","$modalInstance",o.AddBoardController]),n.controller("AddColumnController",["$scope","$http","$modalInstance","currentBoard",o.AddColumnController]),n.controller("UpdateColumnController",["$scope","$http","$modalInstance","currentBoard","currentColumn",o.UpdateColumnController]),n.controller("AddTaskController",["$scope","$http","$modalInstance","currentBoard","columnSlug",o.AddTaskController]),n.controller("UpdateTaskController",["$scope","$http","$modalInstance","currentBoard","columns","currentTask",o.UpdateTaskController])}(KanbanBoardApp||(KanbanBoardApp={}));var KanbanBoardApp;!function(o){var n=function(){function o(o,n,r,t,e){var a=this;this.scope=o,this.http=n,this.modalInstance=r,this.currentBoard=t,this.currentColumn=e,o.currentColumn=e,o.save=function(){a.scope.updateColumnForm.$valid&&(e.Name=a.scope.updateColumnForm.name.$viewValue,a.http.put("http://localhost:2943/boards/"+a.currentBoard.Slug+"/columns/"+e.Slug,e).success(function(o){a.scope.$emit("ColumnUpdated",o),r.dismiss(null)}).error(function(n,r){o.errorMessage="Unknown error has occured",a.scope.updateColumnForm.name.$invalid=!0}))},o.cancel=function(){r.dismiss("cancel")}}return o}();o.UpdateColumnController=n}(KanbanBoardApp||(KanbanBoardApp={}));var KanbanBoardApp;!function(o){var n=function(){function o(o,n,r,t,e,a){var s=this;this.scope=o,this.http=n,this.modalInstance=r,this.currentBoard=t,this.columns=e,this.currentTask=a,this.scope.currentTask=a,this.scope.columns=e,o.save=function(){s.scope.updateTaskForm.$valid&&(s.currentTask.Name=s.scope.updateTaskForm.name.$viewValue,s.currentTask.Description=s.scope.updateTaskForm.description.$viewValue,console.log(s.scope.updateTaskForm.columnSlug),s.currentTask.BoardColumnSlug=s.scope.updateTaskForm.columnSlug.$viewValue,s.http.put("http://localhost:2943/boards/"+s.currentBoard.Slug+"/tasks/"+s.currentTask.Id,s.currentTask).success(function(o){s.scope.$emit("TaskUpdated",o),r.dismiss(null)}).error(function(n,r){o.errorMessage="Unknown error has occured",s.scope.updateTaskForm.name.$invalid=!0}))},o.cancel=function(){r.dismiss("cancel")}}return o}();o.UpdateTaskController=n}(KanbanBoardApp||(KanbanBoardApp={}));